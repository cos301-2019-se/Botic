--- 
branches:
  only:
  - master
  - dev

before_install: 
  - "wget -qO- https://toolbelt.heroku.com/install.sh | sh"
  - "echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin"
  - "echo \"$HEROKU_PASSWORD\" | docker login -u \"$HEROKU_USERNAME\" --password-stdin registry.heroku.com"
  - "cd $TRAVIS_BUILD_DIR/allisn"
#  - "docker build -t alabamaliquidservices/botic:latest-frontend ."
#  - "docker push alabamaliquidservices/botic:latest-frontend"
  - "cd .. & cd $TRAVIS_BUILD_DIR/ai-message_scrubber"
#  - "docker build -t alabamaliquidservices/botic:latest-ms ."
#  - "docker push alabamaliquidservices/botic:latest-ms"
  - "cd .. & cd $TRAVIS_BUILD_DIR/ai-customer-service-chatbot"
#  - "docker build -t alabamaliquidservices/botic:latest-csc ."
#  - "docker push alabamaliquidservices/botic:latest-csc"
  - "cd .. "
#  - "docker tag alabamaliquidservices/botic:latest-frontend registry.heroku.com/$HEROKU_APP_NAME/web"
#  - "docker tag alabamaliquidservices/botic:latest-ms registry.heroku.com/$HEROKU_APP_NAME_TWO/web"
#  - "docker tag alabamaliquidservices/botic:latest-csc registry.heroku.com/$HEROKU_CS/web"
#we include the deployment scripts here before formating
#  - "docker push registry.heroku.com/$HEROKU_APP_NAME/web"
#  - "heroku container:release web --app $HEROKU_APP_NAME"
#  - "docker push registry.heroku.com/$HEROKU_APP_NAME_TWO/web"
#  - "heroku container:release web --app $HEROKU_APP_NAME_TWO"
#  - "docker push registry.heroku.com/$HEROKU_CS/web"
#  - "heroku container:release web --app $HEROKU_CS"

services: 
  - docker
sudo: required
true: ~

language: node_js
node_js:
- "8.2.1"

install:
- npm install newman
- npm install -g jasmine

before_script:
- node --version
- npm --version
- jasmine -v
- node_modules/.bin/newman --version

script:
- node_modules/.bin/newman run ai-message_scrubber/postman/Scrub_API_Tests.postman_collection.json --suppress-exit-code
- cd $TRAVIS_BUILD_DIR/persistence
- npm install
- npm run tsc
- (npm run test --silent --suppress-exit-code || true)
- cd .. & cd $TRAVIS_BUILD_DIR/allisn
- npm install
- npm run transcribe-shared
- (npm run test-shared --silent --suppress-exit-code || true)

#used www.yamllint.com for linting
